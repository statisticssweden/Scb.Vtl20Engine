//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Vtl.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="VtlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IVtlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStart([NotNull] VtlParser.StartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.start"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStart([NotNull] VtlParser.StartContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>temporaryAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemporaryAssignment([NotNull] VtlParser.TemporaryAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>temporaryAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemporaryAssignment([NotNull] VtlParser.TemporaryAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>persistAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPersistAssignment([NotNull] VtlParser.PersistAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>persistAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPersistAssignment([NotNull] VtlParser.PersistAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>defineExpression</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefineExpression([NotNull] VtlParser.DefineExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defineExpression</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefineExpression([NotNull] VtlParser.DefineExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>varIdExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarIdExpr([NotNull] VtlParser.VarIdExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>varIdExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarIdExpr([NotNull] VtlParser.VarIdExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>membershipExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMembershipExpr([NotNull] VtlParser.MembershipExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>membershipExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMembershipExpr([NotNull] VtlParser.MembershipExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inNotInExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInNotInExpr([NotNull] VtlParser.InNotInExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inNotInExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInNotInExpr([NotNull] VtlParser.InNotInExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpr([NotNull] VtlParser.BooleanExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpr([NotNull] VtlParser.BooleanExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpr([NotNull] VtlParser.ComparisonExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpr([NotNull] VtlParser.ComparisonExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] VtlParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] VtlParser.UnaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionsExpression</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionsExpression([NotNull] VtlParser.FunctionsExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionsExpression</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionsExpression([NotNull] VtlParser.FunctionsExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfExpr([NotNull] VtlParser.IfExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfExpr([NotNull] VtlParser.IfExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>clauseExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClauseExpr([NotNull] VtlParser.ClauseExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>clauseExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClauseExpr([NotNull] VtlParser.ClauseExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExpr([NotNull] VtlParser.ArithmeticExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExpr([NotNull] VtlParser.ArithmeticExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExpr([NotNull] VtlParser.ParenthesisExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExpr([NotNull] VtlParser.ParenthesisExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpr([NotNull] VtlParser.ConstantExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpr([NotNull] VtlParser.ConstantExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExprOrConcat</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExprOrConcat([NotNull] VtlParser.ArithmeticExprOrConcatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExprOrConcat</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExprOrConcat([NotNull] VtlParser.ArithmeticExprOrConcatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExprComp([NotNull] VtlParser.ArithmeticExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExprComp([NotNull] VtlParser.ArithmeticExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ifExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfExprComp([NotNull] VtlParser.IfExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ifExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfExprComp([NotNull] VtlParser.IfExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExprComp([NotNull] VtlParser.ComparisonExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExprComp([NotNull] VtlParser.ComparisonExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionsExpressionComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionsExpressionComp([NotNull] VtlParser.FunctionsExpressionCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionsExpressionComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionsExpressionComp([NotNull] VtlParser.FunctionsExpressionCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>compId</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompId([NotNull] VtlParser.CompIdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>compId</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompId([NotNull] VtlParser.CompIdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExprComp([NotNull] VtlParser.ConstantExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExprComp([NotNull] VtlParser.ConstantExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExprOrConcatComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArithmeticExprOrConcatComp([NotNull] VtlParser.ArithmeticExprOrConcatCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExprOrConcatComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArithmeticExprOrConcatComp([NotNull] VtlParser.ArithmeticExprOrConcatCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExprComp([NotNull] VtlParser.ParenthesisExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExprComp([NotNull] VtlParser.ParenthesisExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inNotInExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInNotInExprComp([NotNull] VtlParser.InNotInExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inNotInExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInNotInExprComp([NotNull] VtlParser.InNotInExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExprComp([NotNull] VtlParser.UnaryExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExprComp([NotNull] VtlParser.UnaryExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExprComp([NotNull] VtlParser.BooleanExprCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExprComp([NotNull] VtlParser.BooleanExprCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>genericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericFunctionsComponents([NotNull] VtlParser.GenericFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>genericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericFunctionsComponents([NotNull] VtlParser.GenericFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringFunctionsComponents([NotNull] VtlParser.StringFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringFunctionsComponents([NotNull] VtlParser.StringFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericFunctionsComponents([NotNull] VtlParser.NumericFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericFunctionsComponents([NotNull] VtlParser.NumericFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonFunctionsComponents([NotNull] VtlParser.ComparisonFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonFunctionsComponents([NotNull] VtlParser.ComparisonFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeFunctionsComponents([NotNull] VtlParser.TimeFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeFunctionsComponents([NotNull] VtlParser.TimeFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>conditionalFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalFunctionsComponents([NotNull] VtlParser.ConditionalFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionalFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalFunctionsComponents([NotNull] VtlParser.ConditionalFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFunctionsComponents([NotNull] VtlParser.AggregateFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFunctionsComponents([NotNull] VtlParser.AggregateFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>analyticFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnalyticFunctionsComponents([NotNull] VtlParser.AnalyticFunctionsComponentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>analyticFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnalyticFunctionsComponents([NotNull] VtlParser.AnalyticFunctionsComponentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>joinFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinFunctions([NotNull] VtlParser.JoinFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>joinFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinFunctions([NotNull] VtlParser.JoinFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>genericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericFunctions([NotNull] VtlParser.GenericFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>genericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericFunctions([NotNull] VtlParser.GenericFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringFunctions([NotNull] VtlParser.StringFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringFunctions([NotNull] VtlParser.StringFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumericFunctions([NotNull] VtlParser.NumericFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumericFunctions([NotNull] VtlParser.NumericFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonFunctions([NotNull] VtlParser.ComparisonFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonFunctions([NotNull] VtlParser.ComparisonFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeFunctions([NotNull] VtlParser.TimeFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeFunctions([NotNull] VtlParser.TimeFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>setFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetFunctions([NotNull] VtlParser.SetFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>setFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetFunctions([NotNull] VtlParser.SetFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>hierarchyFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHierarchyFunctions([NotNull] VtlParser.HierarchyFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>hierarchyFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHierarchyFunctions([NotNull] VtlParser.HierarchyFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>validationFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidationFunctions([NotNull] VtlParser.ValidationFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>validationFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidationFunctions([NotNull] VtlParser.ValidationFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>conditionalFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionalFunctions([NotNull] VtlParser.ConditionalFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionalFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionalFunctions([NotNull] VtlParser.ConditionalFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateFunctions([NotNull] VtlParser.AggregateFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateFunctions([NotNull] VtlParser.AggregateFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>analyticFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnalyticFunctions([NotNull] VtlParser.AnalyticFunctionsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>analyticFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnalyticFunctions([NotNull] VtlParser.AnalyticFunctionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.datasetClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatasetClause([NotNull] VtlParser.DatasetClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.datasetClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatasetClause([NotNull] VtlParser.DatasetClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.renameClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRenameClause([NotNull] VtlParser.RenameClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.renameClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRenameClause([NotNull] VtlParser.RenameClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.aggrClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggrClause([NotNull] VtlParser.AggrClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.aggrClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggrClause([NotNull] VtlParser.AggrClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.filterClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterClause([NotNull] VtlParser.FilterClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.filterClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterClause([NotNull] VtlParser.FilterClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.calcClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCalcClause([NotNull] VtlParser.CalcClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.calcClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCalcClause([NotNull] VtlParser.CalcClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.keepOrDropClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeepOrDropClause([NotNull] VtlParser.KeepOrDropClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.keepOrDropClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeepOrDropClause([NotNull] VtlParser.KeepOrDropClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.pivotOrUnpivotClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPivotOrUnpivotClause([NotNull] VtlParser.PivotOrUnpivotClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.pivotOrUnpivotClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPivotOrUnpivotClause([NotNull] VtlParser.PivotOrUnpivotClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.customPivotClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCustomPivotClause([NotNull] VtlParser.CustomPivotClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.customPivotClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCustomPivotClause([NotNull] VtlParser.CustomPivotClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.subspaceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubspaceClause([NotNull] VtlParser.SubspaceClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.subspaceClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubspaceClause([NotNull] VtlParser.SubspaceClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>joinExpr</c>
	/// labeled alternative in <see cref="VtlParser.joinOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinExpr([NotNull] VtlParser.JoinExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>joinExpr</c>
	/// labeled alternative in <see cref="VtlParser.joinOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinExpr([NotNull] VtlParser.JoinExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>defOperator</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefOperator([NotNull] VtlParser.DefOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defOperator</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefOperator([NotNull] VtlParser.DefOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>defDatapointRuleset</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefDatapointRuleset([NotNull] VtlParser.DefDatapointRulesetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defDatapointRuleset</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefDatapointRuleset([NotNull] VtlParser.DefDatapointRulesetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>defHierarchical</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefHierarchical([NotNull] VtlParser.DefHierarchicalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>defHierarchical</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefHierarchical([NotNull] VtlParser.DefHierarchicalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>callDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallDataset([NotNull] VtlParser.CallDatasetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>callDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallDataset([NotNull] VtlParser.CallDatasetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>evalAtom</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvalAtom([NotNull] VtlParser.EvalAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>evalAtom</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvalAtom([NotNull] VtlParser.EvalAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>castExprDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExprDataset([NotNull] VtlParser.CastExprDatasetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>castExprDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExprDataset([NotNull] VtlParser.CastExprDatasetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>callComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallComponent([NotNull] VtlParser.CallComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>callComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallComponent([NotNull] VtlParser.CallComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>castExprComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExprComponent([NotNull] VtlParser.CastExprComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>castExprComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExprComponent([NotNull] VtlParser.CastExprComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>evalAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvalAtomComponent([NotNull] VtlParser.EvalAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>evalAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvalAtomComponent([NotNull] VtlParser.EvalAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.parameterComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterComponent([NotNull] VtlParser.ParameterComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.parameterComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterComponent([NotNull] VtlParser.ParameterComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] VtlParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] VtlParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryStringFunction</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryStringFunction([NotNull] VtlParser.UnaryStringFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryStringFunction</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryStringFunction([NotNull] VtlParser.UnaryStringFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>substrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstrAtom([NotNull] VtlParser.SubstrAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>substrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstrAtom([NotNull] VtlParser.SubstrAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>replaceAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplaceAtom([NotNull] VtlParser.ReplaceAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>replaceAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplaceAtom([NotNull] VtlParser.ReplaceAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>instrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstrAtom([NotNull] VtlParser.InstrAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>instrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstrAtom([NotNull] VtlParser.InstrAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryStringFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryStringFunctionComponent([NotNull] VtlParser.UnaryStringFunctionComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryStringFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryStringFunctionComponent([NotNull] VtlParser.UnaryStringFunctionComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>substrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstrAtomComponent([NotNull] VtlParser.SubstrAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>substrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstrAtomComponent([NotNull] VtlParser.SubstrAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>replaceAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplaceAtomComponent([NotNull] VtlParser.ReplaceAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>replaceAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplaceAtomComponent([NotNull] VtlParser.ReplaceAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>instrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstrAtomComponent([NotNull] VtlParser.InstrAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>instrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstrAtomComponent([NotNull] VtlParser.InstrAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryNumeric([NotNull] VtlParser.UnaryNumericContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryNumeric([NotNull] VtlParser.UnaryNumericContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryWithOptionalNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryWithOptionalNumeric([NotNull] VtlParser.UnaryWithOptionalNumericContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryWithOptionalNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryWithOptionalNumeric([NotNull] VtlParser.UnaryWithOptionalNumericContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryNumeric([NotNull] VtlParser.BinaryNumericContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryNumeric([NotNull] VtlParser.BinaryNumericContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryNumericComponent([NotNull] VtlParser.UnaryNumericComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryNumericComponent([NotNull] VtlParser.UnaryNumericComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryWithOptionalNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryWithOptionalNumericComponent([NotNull] VtlParser.UnaryWithOptionalNumericComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryWithOptionalNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryWithOptionalNumericComponent([NotNull] VtlParser.UnaryWithOptionalNumericComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBinaryNumericComponent([NotNull] VtlParser.BinaryNumericComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBinaryNumericComponent([NotNull] VtlParser.BinaryNumericComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>betweenAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBetweenAtom([NotNull] VtlParser.BetweenAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>betweenAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBetweenAtom([NotNull] VtlParser.BetweenAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>charsetMatchAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharsetMatchAtom([NotNull] VtlParser.CharsetMatchAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>charsetMatchAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharsetMatchAtom([NotNull] VtlParser.CharsetMatchAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>isNullAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsNullAtom([NotNull] VtlParser.IsNullAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>isNullAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsNullAtom([NotNull] VtlParser.IsNullAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>existInAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExistInAtom([NotNull] VtlParser.ExistInAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>existInAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExistInAtom([NotNull] VtlParser.ExistInAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>betweenAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBetweenAtomComponent([NotNull] VtlParser.BetweenAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>betweenAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBetweenAtomComponent([NotNull] VtlParser.BetweenAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>charsetMatchAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharsetMatchAtomComponent([NotNull] VtlParser.CharsetMatchAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>charsetMatchAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharsetMatchAtomComponent([NotNull] VtlParser.CharsetMatchAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>isNullAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsNullAtomComponent([NotNull] VtlParser.IsNullAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>isNullAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsNullAtomComponent([NotNull] VtlParser.IsNullAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>periodAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPeriodAtom([NotNull] VtlParser.PeriodAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>periodAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPeriodAtom([NotNull] VtlParser.PeriodAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fillTimeAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFillTimeAtom([NotNull] VtlParser.FillTimeAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fillTimeAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFillTimeAtom([NotNull] VtlParser.FillTimeAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>flowAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlowAtom([NotNull] VtlParser.FlowAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>flowAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlowAtom([NotNull] VtlParser.FlowAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeShiftAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeShiftAtom([NotNull] VtlParser.TimeShiftAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeShiftAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeShiftAtom([NotNull] VtlParser.TimeShiftAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeAggAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeAggAtom([NotNull] VtlParser.TimeAggAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeAggAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeAggAtom([NotNull] VtlParser.TimeAggAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>currentDateAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCurrentDateAtom([NotNull] VtlParser.CurrentDateAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>currentDateAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCurrentDateAtom([NotNull] VtlParser.CurrentDateAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>periodAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPeriodAtomComponent([NotNull] VtlParser.PeriodAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>periodAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPeriodAtomComponent([NotNull] VtlParser.PeriodAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fillTimeAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFillTimeAtomComponent([NotNull] VtlParser.FillTimeAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fillTimeAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFillTimeAtomComponent([NotNull] VtlParser.FillTimeAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>flowAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlowAtomComponent([NotNull] VtlParser.FlowAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>flowAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlowAtomComponent([NotNull] VtlParser.FlowAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeShiftAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeShiftAtomComponent([NotNull] VtlParser.TimeShiftAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeShiftAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeShiftAtomComponent([NotNull] VtlParser.TimeShiftAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>timeAggAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeAggAtomComponent([NotNull] VtlParser.TimeAggAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>timeAggAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeAggAtomComponent([NotNull] VtlParser.TimeAggAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>currentDateAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCurrentDateAtomComponent([NotNull] VtlParser.CurrentDateAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>currentDateAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCurrentDateAtomComponent([NotNull] VtlParser.CurrentDateAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>unionAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnionAtom([NotNull] VtlParser.UnionAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unionAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnionAtom([NotNull] VtlParser.UnionAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intersectAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntersectAtom([NotNull] VtlParser.IntersectAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intersectAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntersectAtom([NotNull] VtlParser.IntersectAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>setOrSYmDiffAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetOrSYmDiffAtom([NotNull] VtlParser.SetOrSYmDiffAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>setOrSYmDiffAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetOrSYmDiffAtom([NotNull] VtlParser.SetOrSYmDiffAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.hierarchyOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHierarchyOperators([NotNull] VtlParser.HierarchyOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.hierarchyOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHierarchyOperators([NotNull] VtlParser.HierarchyOperatorsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>validateDPruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidateDPruleset([NotNull] VtlParser.ValidateDPrulesetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>validateDPruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidateDPruleset([NotNull] VtlParser.ValidateDPrulesetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>validateHRruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidateHRruleset([NotNull] VtlParser.ValidateHRrulesetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>validateHRruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidateHRruleset([NotNull] VtlParser.ValidateHRrulesetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>validationSimple</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidationSimple([NotNull] VtlParser.ValidationSimpleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>validationSimple</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidationSimple([NotNull] VtlParser.ValidationSimpleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nvlAtom</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNvlAtom([NotNull] VtlParser.NvlAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nvlAtom</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNvlAtom([NotNull] VtlParser.NvlAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nvlAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNvlAtomComponent([NotNull] VtlParser.NvlAtomComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nvlAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperatorsComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNvlAtomComponent([NotNull] VtlParser.NvlAtomComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggrComp([NotNull] VtlParser.AggrCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggrComp([NotNull] VtlParser.AggrCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>countAggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCountAggrComp([NotNull] VtlParser.CountAggrCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>countAggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCountAggrComp([NotNull] VtlParser.CountAggrCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggrDataset</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperatorsGrouping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggrDataset([NotNull] VtlParser.AggrDatasetContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggrDataset</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperatorsGrouping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggrDataset([NotNull] VtlParser.AggrDatasetContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>anSimpleFunction</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnSimpleFunction([NotNull] VtlParser.AnSimpleFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>anSimpleFunction</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnSimpleFunction([NotNull] VtlParser.AnSimpleFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lagOrLeadAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLagOrLeadAn([NotNull] VtlParser.LagOrLeadAnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lagOrLeadAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLagOrLeadAn([NotNull] VtlParser.LagOrLeadAnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ratioToReportAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRatioToReportAn([NotNull] VtlParser.RatioToReportAnContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ratioToReportAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRatioToReportAn([NotNull] VtlParser.RatioToReportAnContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>anSimpleFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnSimpleFunctionComponent([NotNull] VtlParser.AnSimpleFunctionComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>anSimpleFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnSimpleFunctionComponent([NotNull] VtlParser.AnSimpleFunctionComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lagOrLeadAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLagOrLeadAnComponent([NotNull] VtlParser.LagOrLeadAnComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lagOrLeadAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLagOrLeadAnComponent([NotNull] VtlParser.LagOrLeadAnComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rankAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRankAnComponent([NotNull] VtlParser.RankAnComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rankAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRankAnComponent([NotNull] VtlParser.RankAnComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ratioToReportAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRatioToReportAnComponent([NotNull] VtlParser.RatioToReportAnComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ratioToReportAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRatioToReportAnComponent([NotNull] VtlParser.RatioToReportAnComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.renameClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRenameClauseItem([NotNull] VtlParser.RenameClauseItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.renameClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRenameClauseItem([NotNull] VtlParser.RenameClauseItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.aggregateClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateClause([NotNull] VtlParser.AggregateClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.aggregateClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateClause([NotNull] VtlParser.AggregateClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.aggrFunctionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggrFunctionClause([NotNull] VtlParser.AggrFunctionClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.aggrFunctionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggrFunctionClause([NotNull] VtlParser.AggrFunctionClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.calcClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCalcClauseItem([NotNull] VtlParser.CalcClauseItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.calcClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCalcClauseItem([NotNull] VtlParser.CalcClauseItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.subspaceClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubspaceClauseItem([NotNull] VtlParser.SubspaceClauseItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.subspaceClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubspaceClauseItem([NotNull] VtlParser.SubspaceClauseItemContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleScalar</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleScalar([NotNull] VtlParser.SimpleScalarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleScalar</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleScalar([NotNull] VtlParser.SimpleScalarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>scalarWithCast</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalarWithCast([NotNull] VtlParser.ScalarWithCastContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>scalarWithCast</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalarWithCast([NotNull] VtlParser.ScalarWithCastContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinClauseWithoutUsing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinClauseWithoutUsing([NotNull] VtlParser.JoinClauseWithoutUsingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinClauseWithoutUsing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinClauseWithoutUsing([NotNull] VtlParser.JoinClauseWithoutUsingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinClause([NotNull] VtlParser.JoinClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinClause([NotNull] VtlParser.JoinClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinClauseItem([NotNull] VtlParser.JoinClauseItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinClauseItem([NotNull] VtlParser.JoinClauseItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinBody([NotNull] VtlParser.JoinBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinBody([NotNull] VtlParser.JoinBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinApplyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinApplyClause([NotNull] VtlParser.JoinApplyClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinApplyClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinApplyClause([NotNull] VtlParser.JoinApplyClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.partitionByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionByClause([NotNull] VtlParser.PartitionByClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.partitionByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionByClause([NotNull] VtlParser.PartitionByClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.orderByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByClause([NotNull] VtlParser.OrderByClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.orderByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByClause([NotNull] VtlParser.OrderByClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.orderByItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderByItem([NotNull] VtlParser.OrderByItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.orderByItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderByItem([NotNull] VtlParser.OrderByItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.windowingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowingClause([NotNull] VtlParser.WindowingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.windowingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowingClause([NotNull] VtlParser.WindowingClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.signedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignedInteger([NotNull] VtlParser.SignedIntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.signedInteger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignedInteger([NotNull] VtlParser.SignedIntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.limitClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLimitClauseItem([NotNull] VtlParser.LimitClauseItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.limitClauseItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLimitClauseItem([NotNull] VtlParser.LimitClauseItemContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>groupByOrExcept</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupByOrExcept([NotNull] VtlParser.GroupByOrExceptContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>groupByOrExcept</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupByOrExcept([NotNull] VtlParser.GroupByOrExceptContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>groupAll</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupAll([NotNull] VtlParser.GroupAllContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>groupAll</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupAll([NotNull] VtlParser.GroupAllContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHavingClause([NotNull] VtlParser.HavingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHavingClause([NotNull] VtlParser.HavingClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.parameterItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterItem([NotNull] VtlParser.ParameterItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.parameterItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterItem([NotNull] VtlParser.ParameterItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.outputParameterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputParameterType([NotNull] VtlParser.OutputParameterTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.outputParameterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputParameterType([NotNull] VtlParser.OutputParameterTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.outputParameterTypeComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputParameterTypeComponent([NotNull] VtlParser.OutputParameterTypeComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.outputParameterTypeComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputParameterTypeComponent([NotNull] VtlParser.OutputParameterTypeComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.inputParameterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputParameterType([NotNull] VtlParser.InputParameterTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.inputParameterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputParameterType([NotNull] VtlParser.InputParameterTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.rulesetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRulesetType([NotNull] VtlParser.RulesetTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.rulesetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRulesetType([NotNull] VtlParser.RulesetTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalarType([NotNull] VtlParser.ScalarTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.scalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalarType([NotNull] VtlParser.ScalarTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.componentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponentType([NotNull] VtlParser.ComponentTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.componentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponentType([NotNull] VtlParser.ComponentTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.datasetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDatasetType([NotNull] VtlParser.DatasetTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.datasetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDatasetType([NotNull] VtlParser.DatasetTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.evalDatasetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEvalDatasetType([NotNull] VtlParser.EvalDatasetTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.evalDatasetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEvalDatasetType([NotNull] VtlParser.EvalDatasetTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.scalarSetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScalarSetType([NotNull] VtlParser.ScalarSetTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.scalarSetType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScalarSetType([NotNull] VtlParser.ScalarSetTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>dataPoint</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataPoint([NotNull] VtlParser.DataPointContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>dataPoint</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataPoint([NotNull] VtlParser.DataPointContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>dataPointVd</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataPointVd([NotNull] VtlParser.DataPointVdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>dataPointVd</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataPointVd([NotNull] VtlParser.DataPointVdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>dataPointVar</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataPointVar([NotNull] VtlParser.DataPointVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>dataPointVar</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataPointVar([NotNull] VtlParser.DataPointVarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>hrRulesetType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHrRulesetType([NotNull] VtlParser.HrRulesetTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>hrRulesetType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHrRulesetType([NotNull] VtlParser.HrRulesetTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>hrRulesetVdType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHrRulesetVdType([NotNull] VtlParser.HrRulesetVdTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>hrRulesetVdType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHrRulesetVdType([NotNull] VtlParser.HrRulesetVdTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>hrRulesetVarType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHrRulesetVarType([NotNull] VtlParser.HrRulesetVarTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>hrRulesetVarType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHrRulesetVarType([NotNull] VtlParser.HrRulesetVarTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueDomainName([NotNull] VtlParser.ValueDomainNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueDomainName([NotNull] VtlParser.ValueDomainNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.rulesetID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRulesetID([NotNull] VtlParser.RulesetIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.rulesetID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRulesetID([NotNull] VtlParser.RulesetIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.rulesetSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRulesetSignature([NotNull] VtlParser.RulesetSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.rulesetSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRulesetSignature([NotNull] VtlParser.RulesetSignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignature([NotNull] VtlParser.SignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.signature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignature([NotNull] VtlParser.SignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleClauseDatapoint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleClauseDatapoint([NotNull] VtlParser.RuleClauseDatapointContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleClauseDatapoint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleClauseDatapoint([NotNull] VtlParser.RuleClauseDatapointContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleItemDatapoint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleItemDatapoint([NotNull] VtlParser.RuleItemDatapointContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleItemDatapoint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleItemDatapoint([NotNull] VtlParser.RuleItemDatapointContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleClauseHierarchical"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleClauseHierarchical([NotNull] VtlParser.RuleClauseHierarchicalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleClauseHierarchical"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleClauseHierarchical([NotNull] VtlParser.RuleClauseHierarchicalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleItemHierarchical"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuleItemHierarchical([NotNull] VtlParser.RuleItemHierarchicalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleItemHierarchical"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuleItemHierarchical([NotNull] VtlParser.RuleItemHierarchicalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.hierRuleSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHierRuleSignature([NotNull] VtlParser.HierRuleSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.hierRuleSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHierRuleSignature([NotNull] VtlParser.HierRuleSignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueDomainSignature([NotNull] VtlParser.ValueDomainSignatureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainSignature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueDomainSignature([NotNull] VtlParser.ValueDomainSignatureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.codeItemRelation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeItemRelation([NotNull] VtlParser.CodeItemRelationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.codeItemRelation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeItemRelation([NotNull] VtlParser.CodeItemRelationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.codeItemRelationClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodeItemRelationClause([NotNull] VtlParser.CodeItemRelationClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.codeItemRelationClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodeItemRelationClause([NotNull] VtlParser.CodeItemRelationClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueDomainValue([NotNull] VtlParser.ValueDomainValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueDomainValue([NotNull] VtlParser.ValueDomainValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>conditionConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionConstraint([NotNull] VtlParser.ConditionConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionConstraint([NotNull] VtlParser.ConditionConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rangeConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeConstraint([NotNull] VtlParser.RangeConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rangeConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeConstraint([NotNull] VtlParser.RangeConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.compConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompConstraint([NotNull] VtlParser.CompConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.compConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompConstraint([NotNull] VtlParser.CompConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.multModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultModifier([NotNull] VtlParser.MultModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.multModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultModifier([NotNull] VtlParser.MultModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.validationOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidationOutput([NotNull] VtlParser.ValidationOutputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.validationOutput"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidationOutput([NotNull] VtlParser.ValidationOutputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.validationMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValidationMode([NotNull] VtlParser.ValidationModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.validationMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValidationMode([NotNull] VtlParser.ValidationModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.conditionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionClause([NotNull] VtlParser.ConditionClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.conditionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionClause([NotNull] VtlParser.ConditionClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.inputMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputMode([NotNull] VtlParser.InputModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.inputMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputMode([NotNull] VtlParser.InputModeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.imbalanceExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImbalanceExpr([NotNull] VtlParser.ImbalanceExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.imbalanceExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImbalanceExpr([NotNull] VtlParser.ImbalanceExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.inputModeHierarchy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputModeHierarchy([NotNull] VtlParser.InputModeHierarchyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.inputModeHierarchy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputModeHierarchy([NotNull] VtlParser.InputModeHierarchyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.outputModeHierarchy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputModeHierarchy([NotNull] VtlParser.OutputModeHierarchyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.outputModeHierarchy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputModeHierarchy([NotNull] VtlParser.OutputModeHierarchyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlias([NotNull] VtlParser.AliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.alias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlias([NotNull] VtlParser.AliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.varID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarID([NotNull] VtlParser.VarIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.varID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarID([NotNull] VtlParser.VarIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.simpleComponentId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleComponentId([NotNull] VtlParser.SimpleComponentIdContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.simpleComponentId"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleComponentId([NotNull] VtlParser.SimpleComponentIdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.componentID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponentID([NotNull] VtlParser.ComponentIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.componentID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponentID([NotNull] VtlParser.ComponentIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.lists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLists([NotNull] VtlParser.ListsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.lists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLists([NotNull] VtlParser.ListsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.erCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErCode([NotNull] VtlParser.ErCodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.erCode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErCode([NotNull] VtlParser.ErCodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.erLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErLevel([NotNull] VtlParser.ErLevelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.erLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErLevel([NotNull] VtlParser.ErLevelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.comparisonOperand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperand([NotNull] VtlParser.ComparisonOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.comparisonOperand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperand([NotNull] VtlParser.ComparisonOperandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.optionalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionalExpr([NotNull] VtlParser.OptionalExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.optionalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionalExpr([NotNull] VtlParser.OptionalExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.optionalExprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionalExprComponent([NotNull] VtlParser.OptionalExprComponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.optionalExprComponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionalExprComponent([NotNull] VtlParser.OptionalExprComponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.componentRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponentRole([NotNull] VtlParser.ComponentRoleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.componentRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponentRole([NotNull] VtlParser.ComponentRoleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.viralAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViralAttribute([NotNull] VtlParser.ViralAttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.viralAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViralAttribute([NotNull] VtlParser.ViralAttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueDomainID([NotNull] VtlParser.ValueDomainIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueDomainID([NotNull] VtlParser.ValueDomainIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.operatorID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorID([NotNull] VtlParser.OperatorIDContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.operatorID"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorID([NotNull] VtlParser.OperatorIDContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.routineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoutineName([NotNull] VtlParser.RoutineNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.routineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoutineName([NotNull] VtlParser.RoutineNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] VtlParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] VtlParser.ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.basicScalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicScalarType([NotNull] VtlParser.BasicScalarTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.basicScalarType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicScalarType([NotNull] VtlParser.BasicScalarTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.retainType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetainType([NotNull] VtlParser.RetainTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.retainType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetainType([NotNull] VtlParser.RetainTypeContext context);
}
