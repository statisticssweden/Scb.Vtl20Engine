//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Vtl.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IVtlListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class VtlBaseListener : IVtlListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStart([NotNull] VtlParser.StartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStart([NotNull] VtlParser.StartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>temporaryAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTemporaryAssignment([NotNull] VtlParser.TemporaryAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>temporaryAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTemporaryAssignment([NotNull] VtlParser.TemporaryAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>persistAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPersistAssignment([NotNull] VtlParser.PersistAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>persistAssignment</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPersistAssignment([NotNull] VtlParser.PersistAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>defineExpression</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefineExpression([NotNull] VtlParser.DefineExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defineExpression</c>
	/// labeled alternative in <see cref="VtlParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefineExpression([NotNull] VtlParser.DefineExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>varIdExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarIdExpr([NotNull] VtlParser.VarIdExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>varIdExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarIdExpr([NotNull] VtlParser.VarIdExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>membershipExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMembershipExpr([NotNull] VtlParser.MembershipExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>membershipExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMembershipExpr([NotNull] VtlParser.MembershipExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>inNotInExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInNotInExpr([NotNull] VtlParser.InNotInExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>inNotInExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInNotInExpr([NotNull] VtlParser.InNotInExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpr([NotNull] VtlParser.BooleanExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpr([NotNull] VtlParser.BooleanExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExpr([NotNull] VtlParser.ComparisonExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExpr([NotNull] VtlParser.ComparisonExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] VtlParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] VtlParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionsExpression</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionsExpression([NotNull] VtlParser.FunctionsExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionsExpression</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionsExpression([NotNull] VtlParser.FunctionsExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpr([NotNull] VtlParser.IfExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpr([NotNull] VtlParser.IfExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>clauseExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClauseExpr([NotNull] VtlParser.ClauseExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>clauseExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClauseExpr([NotNull] VtlParser.ClauseExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticExpr([NotNull] VtlParser.ArithmeticExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticExpr([NotNull] VtlParser.ArithmeticExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExpr([NotNull] VtlParser.ParenthesisExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExpr([NotNull] VtlParser.ParenthesisExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpr([NotNull] VtlParser.ConstantExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpr</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpr([NotNull] VtlParser.ConstantExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExprOrConcat</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticExprOrConcat([NotNull] VtlParser.ArithmeticExprOrConcatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExprOrConcat</c>
	/// labeled alternative in <see cref="VtlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticExprOrConcat([NotNull] VtlParser.ArithmeticExprOrConcatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticExprComp([NotNull] VtlParser.ArithmeticExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticExprComp([NotNull] VtlParser.ArithmeticExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExprComp([NotNull] VtlParser.IfExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExprComp([NotNull] VtlParser.IfExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonExprComp([NotNull] VtlParser.ComparisonExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonExprComp([NotNull] VtlParser.ComparisonExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionsExpressionComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionsExpressionComp([NotNull] VtlParser.FunctionsExpressionCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionsExpressionComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionsExpressionComp([NotNull] VtlParser.FunctionsExpressionCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>compId</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompId([NotNull] VtlParser.CompIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>compId</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompId([NotNull] VtlParser.CompIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExprComp([NotNull] VtlParser.ConstantExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExprComp([NotNull] VtlParser.ConstantExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>arithmeticExprOrConcatComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArithmeticExprOrConcatComp([NotNull] VtlParser.ArithmeticExprOrConcatCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>arithmeticExprOrConcatComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArithmeticExprOrConcatComp([NotNull] VtlParser.ArithmeticExprOrConcatCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesisExprComp([NotNull] VtlParser.ParenthesisExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesisExprComp([NotNull] VtlParser.ParenthesisExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>inNotInExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInNotInExprComp([NotNull] VtlParser.InNotInExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>inNotInExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInNotInExprComp([NotNull] VtlParser.InNotInExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExprComp([NotNull] VtlParser.UnaryExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExprComp([NotNull] VtlParser.UnaryExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExprComp([NotNull] VtlParser.BooleanExprCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExprComp</c>
	/// labeled alternative in <see cref="VtlParser.exprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExprComp([NotNull] VtlParser.BooleanExprCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>genericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericFunctionsComponents([NotNull] VtlParser.GenericFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>genericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericFunctionsComponents([NotNull] VtlParser.GenericFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringFunctionsComponents([NotNull] VtlParser.StringFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringFunctionsComponents([NotNull] VtlParser.StringFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericFunctionsComponents([NotNull] VtlParser.NumericFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numericFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericFunctionsComponents([NotNull] VtlParser.NumericFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonFunctionsComponents([NotNull] VtlParser.ComparisonFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonFunctionsComponents([NotNull] VtlParser.ComparisonFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeFunctionsComponents([NotNull] VtlParser.TimeFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeFunctionsComponents([NotNull] VtlParser.TimeFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>conditionalFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalFunctionsComponents([NotNull] VtlParser.ConditionalFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionalFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalFunctionsComponents([NotNull] VtlParser.ConditionalFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateFunctionsComponents([NotNull] VtlParser.AggregateFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateFunctionsComponents([NotNull] VtlParser.AggregateFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>analyticFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnalyticFunctionsComponents([NotNull] VtlParser.AnalyticFunctionsComponentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>analyticFunctionsComponents</c>
	/// labeled alternative in <see cref="VtlParser.functionsComponents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnalyticFunctionsComponents([NotNull] VtlParser.AnalyticFunctionsComponentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>joinFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinFunctions([NotNull] VtlParser.JoinFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>joinFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinFunctions([NotNull] VtlParser.JoinFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>genericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericFunctions([NotNull] VtlParser.GenericFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>genericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericFunctions([NotNull] VtlParser.GenericFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringFunctions([NotNull] VtlParser.StringFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringFunctions([NotNull] VtlParser.StringFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericFunctions([NotNull] VtlParser.NumericFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numericFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericFunctions([NotNull] VtlParser.NumericFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonFunctions([NotNull] VtlParser.ComparisonFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonFunctions([NotNull] VtlParser.ComparisonFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeFunctions([NotNull] VtlParser.TimeFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeFunctions([NotNull] VtlParser.TimeFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>setFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetFunctions([NotNull] VtlParser.SetFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>setFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetFunctions([NotNull] VtlParser.SetFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>hierarchyFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHierarchyFunctions([NotNull] VtlParser.HierarchyFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>hierarchyFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHierarchyFunctions([NotNull] VtlParser.HierarchyFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>validationFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidationFunctions([NotNull] VtlParser.ValidationFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>validationFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidationFunctions([NotNull] VtlParser.ValidationFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>conditionalFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalFunctions([NotNull] VtlParser.ConditionalFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionalFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalFunctions([NotNull] VtlParser.ConditionalFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateFunctions([NotNull] VtlParser.AggregateFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateFunctions([NotNull] VtlParser.AggregateFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>analyticFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnalyticFunctions([NotNull] VtlParser.AnalyticFunctionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>analyticFunctions</c>
	/// labeled alternative in <see cref="VtlParser.functions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnalyticFunctions([NotNull] VtlParser.AnalyticFunctionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.datasetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatasetClause([NotNull] VtlParser.DatasetClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.datasetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatasetClause([NotNull] VtlParser.DatasetClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.renameClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRenameClause([NotNull] VtlParser.RenameClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.renameClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRenameClause([NotNull] VtlParser.RenameClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.aggrClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggrClause([NotNull] VtlParser.AggrClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.aggrClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggrClause([NotNull] VtlParser.AggrClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.filterClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilterClause([NotNull] VtlParser.FilterClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.filterClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilterClause([NotNull] VtlParser.FilterClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.calcClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCalcClause([NotNull] VtlParser.CalcClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.calcClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCalcClause([NotNull] VtlParser.CalcClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.keepOrDropClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeepOrDropClause([NotNull] VtlParser.KeepOrDropClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.keepOrDropClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeepOrDropClause([NotNull] VtlParser.KeepOrDropClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.pivotOrUnpivotClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPivotOrUnpivotClause([NotNull] VtlParser.PivotOrUnpivotClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.pivotOrUnpivotClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPivotOrUnpivotClause([NotNull] VtlParser.PivotOrUnpivotClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.customPivotClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCustomPivotClause([NotNull] VtlParser.CustomPivotClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.customPivotClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCustomPivotClause([NotNull] VtlParser.CustomPivotClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.subspaceClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubspaceClause([NotNull] VtlParser.SubspaceClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.subspaceClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubspaceClause([NotNull] VtlParser.SubspaceClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>joinExpr</c>
	/// labeled alternative in <see cref="VtlParser.joinOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinExpr([NotNull] VtlParser.JoinExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>joinExpr</c>
	/// labeled alternative in <see cref="VtlParser.joinOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinExpr([NotNull] VtlParser.JoinExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>defOperator</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefOperator([NotNull] VtlParser.DefOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defOperator</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefOperator([NotNull] VtlParser.DefOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>defDatapointRuleset</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefDatapointRuleset([NotNull] VtlParser.DefDatapointRulesetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defDatapointRuleset</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefDatapointRuleset([NotNull] VtlParser.DefDatapointRulesetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>defHierarchical</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefHierarchical([NotNull] VtlParser.DefHierarchicalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>defHierarchical</c>
	/// labeled alternative in <see cref="VtlParser.defOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefHierarchical([NotNull] VtlParser.DefHierarchicalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>callDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallDataset([NotNull] VtlParser.CallDatasetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>callDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallDataset([NotNull] VtlParser.CallDatasetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>evalAtom</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvalAtom([NotNull] VtlParser.EvalAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>evalAtom</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvalAtom([NotNull] VtlParser.EvalAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>castExprDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExprDataset([NotNull] VtlParser.CastExprDatasetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>castExprDataset</c>
	/// labeled alternative in <see cref="VtlParser.genericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExprDataset([NotNull] VtlParser.CastExprDatasetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>callComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallComponent([NotNull] VtlParser.CallComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>callComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallComponent([NotNull] VtlParser.CallComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>castExprComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastExprComponent([NotNull] VtlParser.CastExprComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>castExprComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastExprComponent([NotNull] VtlParser.CastExprComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>evalAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvalAtomComponent([NotNull] VtlParser.EvalAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>evalAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.genericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvalAtomComponent([NotNull] VtlParser.EvalAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.parameterComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterComponent([NotNull] VtlParser.ParameterComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.parameterComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterComponent([NotNull] VtlParser.ParameterComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] VtlParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] VtlParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryStringFunction</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryStringFunction([NotNull] VtlParser.UnaryStringFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryStringFunction</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryStringFunction([NotNull] VtlParser.UnaryStringFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>substrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubstrAtom([NotNull] VtlParser.SubstrAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>substrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubstrAtom([NotNull] VtlParser.SubstrAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>replaceAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReplaceAtom([NotNull] VtlParser.ReplaceAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>replaceAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReplaceAtom([NotNull] VtlParser.ReplaceAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>instrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstrAtom([NotNull] VtlParser.InstrAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>instrAtom</c>
	/// labeled alternative in <see cref="VtlParser.stringOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstrAtom([NotNull] VtlParser.InstrAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryStringFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryStringFunctionComponent([NotNull] VtlParser.UnaryStringFunctionComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryStringFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryStringFunctionComponent([NotNull] VtlParser.UnaryStringFunctionComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>substrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubstrAtomComponent([NotNull] VtlParser.SubstrAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>substrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubstrAtomComponent([NotNull] VtlParser.SubstrAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>replaceAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReplaceAtomComponent([NotNull] VtlParser.ReplaceAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>replaceAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReplaceAtomComponent([NotNull] VtlParser.ReplaceAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>instrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstrAtomComponent([NotNull] VtlParser.InstrAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>instrAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.stringOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstrAtomComponent([NotNull] VtlParser.InstrAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryNumeric([NotNull] VtlParser.UnaryNumericContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryNumeric([NotNull] VtlParser.UnaryNumericContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryWithOptionalNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryWithOptionalNumeric([NotNull] VtlParser.UnaryWithOptionalNumericContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryWithOptionalNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryWithOptionalNumeric([NotNull] VtlParser.UnaryWithOptionalNumericContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryNumeric([NotNull] VtlParser.BinaryNumericContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryNumeric</c>
	/// labeled alternative in <see cref="VtlParser.numericOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryNumeric([NotNull] VtlParser.BinaryNumericContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryNumericComponent([NotNull] VtlParser.UnaryNumericComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryNumericComponent([NotNull] VtlParser.UnaryNumericComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryWithOptionalNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryWithOptionalNumericComponent([NotNull] VtlParser.UnaryWithOptionalNumericComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryWithOptionalNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryWithOptionalNumericComponent([NotNull] VtlParser.UnaryWithOptionalNumericComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>binaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinaryNumericComponent([NotNull] VtlParser.BinaryNumericComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>binaryNumericComponent</c>
	/// labeled alternative in <see cref="VtlParser.numericOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinaryNumericComponent([NotNull] VtlParser.BinaryNumericComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>betweenAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetweenAtom([NotNull] VtlParser.BetweenAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>betweenAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetweenAtom([NotNull] VtlParser.BetweenAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>charsetMatchAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharsetMatchAtom([NotNull] VtlParser.CharsetMatchAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charsetMatchAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharsetMatchAtom([NotNull] VtlParser.CharsetMatchAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>isNullAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsNullAtom([NotNull] VtlParser.IsNullAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>isNullAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsNullAtom([NotNull] VtlParser.IsNullAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>existInAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExistInAtom([NotNull] VtlParser.ExistInAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>existInAtom</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExistInAtom([NotNull] VtlParser.ExistInAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>betweenAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBetweenAtomComponent([NotNull] VtlParser.BetweenAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>betweenAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBetweenAtomComponent([NotNull] VtlParser.BetweenAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>charsetMatchAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharsetMatchAtomComponent([NotNull] VtlParser.CharsetMatchAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>charsetMatchAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharsetMatchAtomComponent([NotNull] VtlParser.CharsetMatchAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>isNullAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsNullAtomComponent([NotNull] VtlParser.IsNullAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>isNullAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.comparisonOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsNullAtomComponent([NotNull] VtlParser.IsNullAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>periodAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPeriodAtom([NotNull] VtlParser.PeriodAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>periodAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPeriodAtom([NotNull] VtlParser.PeriodAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fillTimeAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFillTimeAtom([NotNull] VtlParser.FillTimeAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fillTimeAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFillTimeAtom([NotNull] VtlParser.FillTimeAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>flowAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlowAtom([NotNull] VtlParser.FlowAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>flowAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlowAtom([NotNull] VtlParser.FlowAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeShiftAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeShiftAtom([NotNull] VtlParser.TimeShiftAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeShiftAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeShiftAtom([NotNull] VtlParser.TimeShiftAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeAggAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeAggAtom([NotNull] VtlParser.TimeAggAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeAggAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeAggAtom([NotNull] VtlParser.TimeAggAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>currentDateAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCurrentDateAtom([NotNull] VtlParser.CurrentDateAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>currentDateAtom</c>
	/// labeled alternative in <see cref="VtlParser.timeOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCurrentDateAtom([NotNull] VtlParser.CurrentDateAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>periodAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPeriodAtomComponent([NotNull] VtlParser.PeriodAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>periodAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPeriodAtomComponent([NotNull] VtlParser.PeriodAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fillTimeAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFillTimeAtomComponent([NotNull] VtlParser.FillTimeAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fillTimeAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFillTimeAtomComponent([NotNull] VtlParser.FillTimeAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>flowAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFlowAtomComponent([NotNull] VtlParser.FlowAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>flowAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFlowAtomComponent([NotNull] VtlParser.FlowAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeShiftAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeShiftAtomComponent([NotNull] VtlParser.TimeShiftAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeShiftAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeShiftAtomComponent([NotNull] VtlParser.TimeShiftAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeAggAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeAggAtomComponent([NotNull] VtlParser.TimeAggAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeAggAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeAggAtomComponent([NotNull] VtlParser.TimeAggAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>currentDateAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCurrentDateAtomComponent([NotNull] VtlParser.CurrentDateAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>currentDateAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.timeOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCurrentDateAtomComponent([NotNull] VtlParser.CurrentDateAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unionAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnionAtom([NotNull] VtlParser.UnionAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unionAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnionAtom([NotNull] VtlParser.UnionAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intersectAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntersectAtom([NotNull] VtlParser.IntersectAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intersectAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntersectAtom([NotNull] VtlParser.IntersectAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>setOrSYmDiffAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetOrSYmDiffAtom([NotNull] VtlParser.SetOrSYmDiffAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>setOrSYmDiffAtom</c>
	/// labeled alternative in <see cref="VtlParser.setOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetOrSYmDiffAtom([NotNull] VtlParser.SetOrSYmDiffAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.hierarchyOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHierarchyOperators([NotNull] VtlParser.HierarchyOperatorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.hierarchyOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHierarchyOperators([NotNull] VtlParser.HierarchyOperatorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>validateDPruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidateDPruleset([NotNull] VtlParser.ValidateDPrulesetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>validateDPruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidateDPruleset([NotNull] VtlParser.ValidateDPrulesetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>validateHRruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidateHRruleset([NotNull] VtlParser.ValidateHRrulesetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>validateHRruleset</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidateHRruleset([NotNull] VtlParser.ValidateHRrulesetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>validationSimple</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidationSimple([NotNull] VtlParser.ValidationSimpleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>validationSimple</c>
	/// labeled alternative in <see cref="VtlParser.validationOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidationSimple([NotNull] VtlParser.ValidationSimpleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nvlAtom</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNvlAtom([NotNull] VtlParser.NvlAtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nvlAtom</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNvlAtom([NotNull] VtlParser.NvlAtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nvlAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNvlAtomComponent([NotNull] VtlParser.NvlAtomComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nvlAtomComponent</c>
	/// labeled alternative in <see cref="VtlParser.conditionalOperatorsComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNvlAtomComponent([NotNull] VtlParser.NvlAtomComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>aggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggrComp([NotNull] VtlParser.AggrCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggrComp([NotNull] VtlParser.AggrCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>countAggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCountAggrComp([NotNull] VtlParser.CountAggrCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>countAggrComp</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperators"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCountAggrComp([NotNull] VtlParser.CountAggrCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>aggrDataset</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperatorsGrouping"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggrDataset([NotNull] VtlParser.AggrDatasetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>aggrDataset</c>
	/// labeled alternative in <see cref="VtlParser.aggrOperatorsGrouping"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggrDataset([NotNull] VtlParser.AggrDatasetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>anSimpleFunction</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnSimpleFunction([NotNull] VtlParser.AnSimpleFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>anSimpleFunction</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnSimpleFunction([NotNull] VtlParser.AnSimpleFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lagOrLeadAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLagOrLeadAn([NotNull] VtlParser.LagOrLeadAnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lagOrLeadAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLagOrLeadAn([NotNull] VtlParser.LagOrLeadAnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ratioToReportAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRatioToReportAn([NotNull] VtlParser.RatioToReportAnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ratioToReportAn</c>
	/// labeled alternative in <see cref="VtlParser.anFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRatioToReportAn([NotNull] VtlParser.RatioToReportAnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>anSimpleFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnSimpleFunctionComponent([NotNull] VtlParser.AnSimpleFunctionComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>anSimpleFunctionComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnSimpleFunctionComponent([NotNull] VtlParser.AnSimpleFunctionComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lagOrLeadAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLagOrLeadAnComponent([NotNull] VtlParser.LagOrLeadAnComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lagOrLeadAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLagOrLeadAnComponent([NotNull] VtlParser.LagOrLeadAnComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rankAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRankAnComponent([NotNull] VtlParser.RankAnComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rankAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRankAnComponent([NotNull] VtlParser.RankAnComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ratioToReportAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRatioToReportAnComponent([NotNull] VtlParser.RatioToReportAnComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ratioToReportAnComponent</c>
	/// labeled alternative in <see cref="VtlParser.anFunctionComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRatioToReportAnComponent([NotNull] VtlParser.RatioToReportAnComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.renameClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRenameClauseItem([NotNull] VtlParser.RenameClauseItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.renameClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRenameClauseItem([NotNull] VtlParser.RenameClauseItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.aggregateClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggregateClause([NotNull] VtlParser.AggregateClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.aggregateClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggregateClause([NotNull] VtlParser.AggregateClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.aggrFunctionClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAggrFunctionClause([NotNull] VtlParser.AggrFunctionClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.aggrFunctionClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAggrFunctionClause([NotNull] VtlParser.AggrFunctionClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.calcClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCalcClauseItem([NotNull] VtlParser.CalcClauseItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.calcClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCalcClauseItem([NotNull] VtlParser.CalcClauseItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.subspaceClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubspaceClauseItem([NotNull] VtlParser.SubspaceClauseItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.subspaceClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubspaceClauseItem([NotNull] VtlParser.SubspaceClauseItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleScalar</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleScalar([NotNull] VtlParser.SimpleScalarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleScalar</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleScalar([NotNull] VtlParser.SimpleScalarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>scalarWithCast</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScalarWithCast([NotNull] VtlParser.ScalarWithCastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>scalarWithCast</c>
	/// labeled alternative in <see cref="VtlParser.scalarItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScalarWithCast([NotNull] VtlParser.ScalarWithCastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinClauseWithoutUsing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinClauseWithoutUsing([NotNull] VtlParser.JoinClauseWithoutUsingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinClauseWithoutUsing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinClauseWithoutUsing([NotNull] VtlParser.JoinClauseWithoutUsingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinClause([NotNull] VtlParser.JoinClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinClause([NotNull] VtlParser.JoinClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinClauseItem([NotNull] VtlParser.JoinClauseItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinClauseItem([NotNull] VtlParser.JoinClauseItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinBody([NotNull] VtlParser.JoinBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinBody([NotNull] VtlParser.JoinBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.joinApplyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoinApplyClause([NotNull] VtlParser.JoinApplyClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.joinApplyClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoinApplyClause([NotNull] VtlParser.JoinApplyClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.partitionByClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPartitionByClause([NotNull] VtlParser.PartitionByClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.partitionByClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPartitionByClause([NotNull] VtlParser.PartitionByClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.orderByClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderByClause([NotNull] VtlParser.OrderByClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.orderByClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderByClause([NotNull] VtlParser.OrderByClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.orderByItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderByItem([NotNull] VtlParser.OrderByItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.orderByItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderByItem([NotNull] VtlParser.OrderByItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.windowingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWindowingClause([NotNull] VtlParser.WindowingClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.windowingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWindowingClause([NotNull] VtlParser.WindowingClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.signedInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignedInteger([NotNull] VtlParser.SignedIntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.signedInteger"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignedInteger([NotNull] VtlParser.SignedIntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.limitClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimitClauseItem([NotNull] VtlParser.LimitClauseItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.limitClauseItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimitClauseItem([NotNull] VtlParser.LimitClauseItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>groupByOrExcept</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupByOrExcept([NotNull] VtlParser.GroupByOrExceptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>groupByOrExcept</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupByOrExcept([NotNull] VtlParser.GroupByOrExceptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>groupAll</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupAll([NotNull] VtlParser.GroupAllContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>groupAll</c>
	/// labeled alternative in <see cref="VtlParser.groupingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupAll([NotNull] VtlParser.GroupAllContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.havingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHavingClause([NotNull] VtlParser.HavingClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.havingClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHavingClause([NotNull] VtlParser.HavingClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.parameterItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterItem([NotNull] VtlParser.ParameterItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.parameterItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterItem([NotNull] VtlParser.ParameterItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.outputParameterType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputParameterType([NotNull] VtlParser.OutputParameterTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.outputParameterType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputParameterType([NotNull] VtlParser.OutputParameterTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.outputParameterTypeComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputParameterTypeComponent([NotNull] VtlParser.OutputParameterTypeComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.outputParameterTypeComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputParameterTypeComponent([NotNull] VtlParser.OutputParameterTypeComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.inputParameterType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputParameterType([NotNull] VtlParser.InputParameterTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.inputParameterType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputParameterType([NotNull] VtlParser.InputParameterTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.rulesetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRulesetType([NotNull] VtlParser.RulesetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.rulesetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRulesetType([NotNull] VtlParser.RulesetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.scalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScalarType([NotNull] VtlParser.ScalarTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.scalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScalarType([NotNull] VtlParser.ScalarTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.componentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComponentType([NotNull] VtlParser.ComponentTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.componentType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComponentType([NotNull] VtlParser.ComponentTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.datasetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatasetType([NotNull] VtlParser.DatasetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.datasetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatasetType([NotNull] VtlParser.DatasetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.evalDatasetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEvalDatasetType([NotNull] VtlParser.EvalDatasetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.evalDatasetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEvalDatasetType([NotNull] VtlParser.EvalDatasetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.scalarSetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScalarSetType([NotNull] VtlParser.ScalarSetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.scalarSetType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScalarSetType([NotNull] VtlParser.ScalarSetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dataPoint</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataPoint([NotNull] VtlParser.DataPointContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dataPoint</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataPoint([NotNull] VtlParser.DataPointContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dataPointVd</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataPointVd([NotNull] VtlParser.DataPointVdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dataPointVd</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataPointVd([NotNull] VtlParser.DataPointVdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dataPointVar</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataPointVar([NotNull] VtlParser.DataPointVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dataPointVar</c>
	/// labeled alternative in <see cref="VtlParser.dpRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataPointVar([NotNull] VtlParser.DataPointVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>hrRulesetType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHrRulesetType([NotNull] VtlParser.HrRulesetTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>hrRulesetType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHrRulesetType([NotNull] VtlParser.HrRulesetTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>hrRulesetVdType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHrRulesetVdType([NotNull] VtlParser.HrRulesetVdTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>hrRulesetVdType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHrRulesetVdType([NotNull] VtlParser.HrRulesetVdTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>hrRulesetVarType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHrRulesetVarType([NotNull] VtlParser.HrRulesetVarTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>hrRulesetVarType</c>
	/// labeled alternative in <see cref="VtlParser.hrRuleset"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHrRulesetVarType([NotNull] VtlParser.HrRulesetVarTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueDomainName([NotNull] VtlParser.ValueDomainNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueDomainName([NotNull] VtlParser.ValueDomainNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.rulesetID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRulesetID([NotNull] VtlParser.RulesetIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.rulesetID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRulesetID([NotNull] VtlParser.RulesetIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.rulesetSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRulesetSignature([NotNull] VtlParser.RulesetSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.rulesetSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRulesetSignature([NotNull] VtlParser.RulesetSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignature([NotNull] VtlParser.SignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.signature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignature([NotNull] VtlParser.SignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleClauseDatapoint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleClauseDatapoint([NotNull] VtlParser.RuleClauseDatapointContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleClauseDatapoint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleClauseDatapoint([NotNull] VtlParser.RuleClauseDatapointContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleItemDatapoint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleItemDatapoint([NotNull] VtlParser.RuleItemDatapointContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleItemDatapoint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleItemDatapoint([NotNull] VtlParser.RuleItemDatapointContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleClauseHierarchical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleClauseHierarchical([NotNull] VtlParser.RuleClauseHierarchicalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleClauseHierarchical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleClauseHierarchical([NotNull] VtlParser.RuleClauseHierarchicalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.ruleItemHierarchical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuleItemHierarchical([NotNull] VtlParser.RuleItemHierarchicalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.ruleItemHierarchical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuleItemHierarchical([NotNull] VtlParser.RuleItemHierarchicalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.hierRuleSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHierRuleSignature([NotNull] VtlParser.HierRuleSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.hierRuleSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHierRuleSignature([NotNull] VtlParser.HierRuleSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueDomainSignature([NotNull] VtlParser.ValueDomainSignatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainSignature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueDomainSignature([NotNull] VtlParser.ValueDomainSignatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.codeItemRelation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeItemRelation([NotNull] VtlParser.CodeItemRelationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.codeItemRelation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeItemRelation([NotNull] VtlParser.CodeItemRelationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.codeItemRelationClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodeItemRelationClause([NotNull] VtlParser.CodeItemRelationClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.codeItemRelationClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodeItemRelationClause([NotNull] VtlParser.CodeItemRelationClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueDomainValue([NotNull] VtlParser.ValueDomainValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueDomainValue([NotNull] VtlParser.ValueDomainValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>conditionConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionConstraint([NotNull] VtlParser.ConditionConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>conditionConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionConstraint([NotNull] VtlParser.ConditionConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rangeConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeConstraint([NotNull] VtlParser.RangeConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rangeConstraint</c>
	/// labeled alternative in <see cref="VtlParser.scalarTypeConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeConstraint([NotNull] VtlParser.RangeConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.compConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompConstraint([NotNull] VtlParser.CompConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.compConstraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompConstraint([NotNull] VtlParser.CompConstraintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.multModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultModifier([NotNull] VtlParser.MultModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.multModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultModifier([NotNull] VtlParser.MultModifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.validationOutput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidationOutput([NotNull] VtlParser.ValidationOutputContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.validationOutput"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidationOutput([NotNull] VtlParser.ValidationOutputContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.validationMode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValidationMode([NotNull] VtlParser.ValidationModeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.validationMode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValidationMode([NotNull] VtlParser.ValidationModeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.conditionClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionClause([NotNull] VtlParser.ConditionClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.conditionClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionClause([NotNull] VtlParser.ConditionClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.inputMode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputMode([NotNull] VtlParser.InputModeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.inputMode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputMode([NotNull] VtlParser.InputModeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.imbalanceExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImbalanceExpr([NotNull] VtlParser.ImbalanceExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.imbalanceExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImbalanceExpr([NotNull] VtlParser.ImbalanceExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.inputModeHierarchy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputModeHierarchy([NotNull] VtlParser.InputModeHierarchyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.inputModeHierarchy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputModeHierarchy([NotNull] VtlParser.InputModeHierarchyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.outputModeHierarchy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputModeHierarchy([NotNull] VtlParser.OutputModeHierarchyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.outputModeHierarchy"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputModeHierarchy([NotNull] VtlParser.OutputModeHierarchyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlias([NotNull] VtlParser.AliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlias([NotNull] VtlParser.AliasContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.varID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarID([NotNull] VtlParser.VarIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.varID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarID([NotNull] VtlParser.VarIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.simpleComponentId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleComponentId([NotNull] VtlParser.SimpleComponentIdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.simpleComponentId"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleComponentId([NotNull] VtlParser.SimpleComponentIdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.componentID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComponentID([NotNull] VtlParser.ComponentIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.componentID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComponentID([NotNull] VtlParser.ComponentIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.lists"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLists([NotNull] VtlParser.ListsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.lists"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLists([NotNull] VtlParser.ListsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.erCode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErCode([NotNull] VtlParser.ErCodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.erCode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErCode([NotNull] VtlParser.ErCodeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.erLevel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErLevel([NotNull] VtlParser.ErLevelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.erLevel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErLevel([NotNull] VtlParser.ErLevelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.comparisonOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperand([NotNull] VtlParser.ComparisonOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.comparisonOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperand([NotNull] VtlParser.ComparisonOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.optionalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionalExpr([NotNull] VtlParser.OptionalExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.optionalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionalExpr([NotNull] VtlParser.OptionalExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.optionalExprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionalExprComponent([NotNull] VtlParser.OptionalExprComponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.optionalExprComponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionalExprComponent([NotNull] VtlParser.OptionalExprComponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.componentRole"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComponentRole([NotNull] VtlParser.ComponentRoleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.componentRole"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComponentRole([NotNull] VtlParser.ComponentRoleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.viralAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterViralAttribute([NotNull] VtlParser.ViralAttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.viralAttribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitViralAttribute([NotNull] VtlParser.ViralAttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.valueDomainID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueDomainID([NotNull] VtlParser.ValueDomainIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.valueDomainID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueDomainID([NotNull] VtlParser.ValueDomainIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.operatorID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorID([NotNull] VtlParser.OperatorIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.operatorID"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorID([NotNull] VtlParser.OperatorIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.routineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoutineName([NotNull] VtlParser.RoutineNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.routineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoutineName([NotNull] VtlParser.RoutineNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] VtlParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] VtlParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.basicScalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasicScalarType([NotNull] VtlParser.BasicScalarTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.basicScalarType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasicScalarType([NotNull] VtlParser.BasicScalarTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VtlParser.retainType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetainType([NotNull] VtlParser.RetainTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VtlParser.retainType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetainType([NotNull] VtlParser.RetainTypeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
